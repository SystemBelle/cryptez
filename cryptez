#!/bin/bash

# Jamie Carranza (jamie.carranza@gmail.com)
# September 1, 2011
# Status: HEAD

# Makes maintaining encrypted files simple.  Optionally store encrypted
# files in ENC_DIR for easy access

# Cryptez only writes decrypted files to the directory specified as "DEC_DIR",
# this directory should be located in memory (ramdisk or shared memory
# space, i.e. /dev/shm)

# Default location of encrypted files
ENC_DIR='/home/jamie/Kinetic/secret'

# Decrypted files directory, this may be the same directory as ENC_DIR.
# It's recommended to use a separate directory on a ramdisk
DEC_DIR='/dev/shm'

# Use anything valid for use with the `openssl` command
CIPHER='aes-256-cbc'

# Read/write editor command
editor_rw='/usr/bin/vim'

# Read only editor command
editor_ro='/usr/bin/vi -R'

# Whether to open for editing by default (0 = no, 1 = yes)
EDIT='0'

# Shell Command Paths
awk='/usr/bin/awk'
basename='/usr/bin/basename'
cat='/bin/cat'
dirname='/usr/bin/dirname'
echo='/bin/echo'
file='/usr/bin/file'
grep='/usr/bin/grep'
kill='/bin/kill'
mkdir='/bin/mkdir'
mv='/bin/mv'
openssl='/usr/bin/openssl'
pwd='/bin/pwd'
rm='/bin/rm'

# -=-=-=-=-DO NOT EDIT BELOW THIS LINE-=-=-=-=-=-=-=-=-=-=-

PWD=`$pwd`
MV=0

USAGE () {
$cat <<EOF
Usage: cryptez [ OPTIONS ] [ -f FILE ]

OPTIONS
    -e      edit decrypted file or open a new file for editing.
    -f      file to operate on
    -m      create new file in ENC_DIR
    -h      display usage

ENC_DIR: $ENC_DIR
EOF
exit 0
}

# Takes a file as arg, encrypts it, and outputs with ".cryptez" extension
ENCRYPT () {
    if
        $openssl $CIPHER -salt -in "$1" -out "${DEC_DIR}/${FILE_NAME}.cryptez"
    then :
    else
        $echo 'encryption failed ...exiting'
        exit 0
    fi
}

# takes encrypted file as arg, decrypts it, and outputs with ".cryptez.txt"
# extension in DEC_DIR
DECRYPT () {
    if
        $openssl $CIPHER -d -salt -in "$1" \
        -out "${DEC_DIR}/${FILE_NAME}.cryptez.txt"
    then :
    else
        $echo 'decryption failed ...exiting'
        exit 0
    fi
}

# Delete any decrypted files (.cryptez.txt extension) in $DEC_DIR
DEL_TXT () {
    $rm -f ${DEC_DIR}/*.cryptez.txt
}

TRAP () {
	$echo -e "caught signal\nWARNING: decrypted files may exist!"
	$kill -- "-$$"
}

# Trap signals
trap 'TRAP; exit 1' 2 15

# PROCESS OPTIONS
while
	getopts ":ef:mh" options; do
	    case $options in
		    e ) EDIT=1 ;;
		    f ) infile="$OPTARG" ;;
            m ) MV=1 ;;
            h ) USAGE && exit 0 ;;
		    * ) USAGE && exit 1 ;;
	    esac
done

# Make sure DEC_DIR exists
if [ ! -d $DEC_DIR ]; then
    $echo "DEC_DIR does not exist... exiting"
    exit 1
fi

## Search for file to work with, make sure it exists

# if $infile exists in $ENC_DIR use it
if
    [ -e ${ENC_DIR}/${infile} ]
then
	FILE="${ENC_DIR}/${infile}"
    FILE_NAME="$infile"
    FILE_PATH="$ENC_DIR"
elif
    [ -e ${ENC_DIR}/${infile}.cryptez ]
then
	FILE="${ENC_DIR}/${infile}.cryptez"
    FILE_NAME="${infile}.cryptez"
    FILE_PATH="$ENC_DIR"
else
	FILE=${infile}
    FILE_NAME=`$basename "$infile"`
    FILE_PATH=`$dirname "$infile"`
fi


# Error out if input file doesn't exist and "-e" option not given
if ! [ -e "$FILE" ] && [ $EDIT -eq 0 ]; then
	$echo "$FILE does not exist, use '-e' to open new file"
	exit 1
fi

# if input file is "data", try to decrypt
if
	$file "$FILE" | $grep "data" &>/dev/null
then
    DECRYPT "$FILE"
fi

if
    [ $EDIT -eq 0 ]
then
    $editor_ro ${DEC_DIR}/${FILE_NAME}.cryptez.txt
    DEL_TXT
    exit 0
fi

[ $EDIT -eq 1 ] && $editor_rw ${DEC_DIR}/${FILE_NAME}.cryptez.txt

# Encrypt file
ENCRYPT ${DEC_DIR}/${FILE_NAME}.cryptez.txt

DEL_TXT

# Move encrypted file where it belongs
if
    [ $MV -eq 1 ]
then
    $mv ${DEC_DIR}/${FILE_NAME}.cryptez ${ENC_DIR}/${FILE_NAME}.cryptez
else
    $mv ${DEC_DIR}/${FILE_NAME}.cryptez ${FILE}
fi

